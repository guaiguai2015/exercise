apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
//apply plugin: 'walle'

android {
    compileSdkVersion 28
    signingConfigs {
        release {
            storeFile file('../exercise')
            storePassword '123456'
            keyAlias 'androidExercise'
            keyPassword '123456'
        }
    }

    defaultConfig {
        applicationId "com.wrl.exercise"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }
    sourceSets { main { assets.srcDirs = ['src/main/assets', 'src/main/assets/'] } }
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

//walle {
//    // 指定渠道包的输出路径
//    apkOutputFolder = new File("${project.getBuildDir()}/渠道包")
//    // 定制渠道包的APK的文件名称
//    apkFileNameFormat = '${packageName}-${channel}-v${versionName}.${versionCode}-${buildType}.apk'
//    // 渠道&额外信息配置文件，与channelFile互斥
//    configFile = new File("${project.getRootDir()}/config.json")
//}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'org.aspectj:aspectjrt:1.8.9'
    implementation 'com.github.wendux:DSBridge-Android:3.0-SNAPSHOT'
    //    implementation 'com.meituan.android.walle:library:1.1.6'
    implementation(name: 'sspsdk-release', ext: 'aar')
    implementation files('libs/autolayout.jar')
    implementation 'com.android.support:design:28.0.0'
}
repositories {
    mavenCentral()
}


import org.aspectj.bridge.IMessage
import org.aspectj.bridge.MessageHandler
import org.aspectj.tools.ajc.Main

final def log = project.logger
final def variants = project.android.applicationVariants
variants.all { variant ->
    log.error "========================";
    log.error "Aspectj切片开始编织Class!";
    log.error "========================";
    JavaCompile javaCompile = variant.javaCompile
    javaCompile.doLast {
        String[] args = ["-showWeaveInfo",
                         "-1.5",
                         "-inpath", javaCompile.destinationDir.toString(),
                         "-aspectpath", javaCompile.classpath.asPath,
                         "-d", javaCompile.destinationDir.toString(),
                         "-classpath", javaCompile.classpath.asPath,
                         "-bootclasspath", project.android.bootClasspath.join(File.pathSeparator)]
        log.debug "ajc args: " + Arrays.toString(args)
        MessageHandler handler = new MessageHandler(true);
        new Main().run(args, handler);
        for (IMessage message : handler.getMessages(null, true)) {
            switch (message.getKind()) {
                case IMessage.ABORT:
                case IMessage.ERROR:
                case IMessage.FAIL:
                    log.error message.message, message.thrown
                    break;
                case IMessage.WARNING:
                    log.warn message.message, message.thrown
                    break;
                case IMessage.INFO:
                    log.info message.message, message.thrown
                    break;
                case IMessage.DEBUG:
                    log.debug message.message, message.thrown
                    break;
            }
        }
    }
}
